<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Helpers="clr-namespace:Antd.Helpers"
                    xmlns:Controls="clr-namespace:Antd.Controls"
                    xmlns:Animations="clr-namespace:Antd.Animations">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Antd;component/Styles/Internal.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Ant.RadioButton" BasedOn="{StaticResource Ant.Control}" TargetType="{x:Type RadioButton}">
        <Setter Property="Padding" Value="4 0 8 0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Background" Value="{DynamicResource RadioButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushBase}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <!-- Effect -->
                        <Ellipse x:Name="Effect"
                                 Opacity="0"
                                 RenderTransformOrigin="0.5,0.5"
                                 Width="{DynamicResource RadioSize}"
                                 Height="{DynamicResource RadioSize}"
                                 Stroke="{DynamicResource RadioDotBrush}"
                                 StrokeThickness="{TemplateBinding BorderThickness}">
                            <Ellipse.RenderTransform>
                                <ScaleTransform x:Name="EffectScale" ScaleX="1" ScaleY="1" />
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <!-- Circle -->
                        <Ellipse x:Name="Inner"
                                 Width="{DynamicResource RadioSize}"
                                 Height="{DynamicResource RadioSize}"
                                 Fill="{TemplateBinding Background}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Ellipse x:Name="Dot"
                                 Opacity="0"
                                 RenderTransformOrigin="0.5,0.5"
                                 Width="{DynamicResource RadioDotSize}"
                                 Height="{DynamicResource RadioDotSize}"
                                 Fill="{DynamicResource RadioDotBrush}">
                            <Ellipse.RenderTransform>
                                <ScaleTransform x:Name="DotTransform" ScaleX="0" ScaleY="0" />
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <!-- Content -->
                        <Controls:ContentControl Grid.Column="1"
                                                 RecognizesAccessKey="True"
                                                 Padding="{TemplateBinding Padding}"
                                                 Content="{TemplateBinding Content}"
                                                 ContentTemplate="{TemplateBinding ContentTemplate}"
                                                 ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                 ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                 ContentCharacterCasing="{Binding Path=(Helpers:Control.ContentCharacterCasing), 
                                                                                  RelativeSource={RelativeSource TemplatedParent}}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <Animations:ColorAnimation Storyboard.TargetName="Inner"
                                                                   Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                                   ToEx="{DynamicResource RadioDotBrush}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <Animations:ColorAnimation Storyboard.TargetName="Inner"
                                                                   Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                   ToEx="{DynamicResource InputDisabledBackground}" />
                                        <Animations:ColorAnimation Storyboard.TargetName="Inner"
                                                                   Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                                   ToEx="{DynamicResource BorderBrushBase}" />
                                        <ColorAnimation Storyboard.TargetName="Dot"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        EasingFunction="{StaticResource EaseInOutCirc}"
                                                        To="#CCCCCC" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Dot"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         EasingFunction="{StaticResource EaseInOutCirc}" 
                                                         Duration="0:0:0.2" 
                                                         To="1" />
                                        <DoubleAnimation Storyboard.TargetName="DotTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         EasingFunction="{StaticResource EaseInOutCirc}" 
                                                         Duration="0:0:0.2" 
                                                         To="1" />
                                        <DoubleAnimation Storyboard.TargetName="DotTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         EasingFunction="{StaticResource EaseInOutCirc}" 
                                                         Duration="0:0:0.2" 
                                                         To="1" />
                                        <!-- Effect -->
                                        <DoubleAnimation Storyboard.TargetName="Effect"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         EasingFunction="{StaticResource EaseInOut}"
                                                         Duration="0:0:0.36" 
                                                         From="0.5"
                                                         To="0" />
                                        <DoubleAnimation Storyboard.TargetName="EffectScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         EasingFunction="{StaticResource EaseInOut}" 
                                                         Duration="0:0:0.36"
                                                         To="1.6" />
                                        <DoubleAnimation Storyboard.TargetName="EffectScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         EasingFunction="{StaticResource EaseInOut}"
                                                         Duration="0:0:0.36"
                                                         To="1.6" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Inner" Property="Stroke" Value="{DynamicResource RadioDotBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>