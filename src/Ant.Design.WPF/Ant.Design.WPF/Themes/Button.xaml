<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Antd.Controls"
                    xmlns:Helpers="clr-namespace:Antd.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Antd;component/Styles/Internal.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Controls:Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="{DynamicResource ButtonHeightBase}" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPaddingBase}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeBase}" />
        <Setter Property="FontWeight" Value="{DynamicResource ButtonFontWeight}" />
        <Setter Property="EffectBrush" Value="{DynamicResource ButtonPrimaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}" />
        <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorder}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThicknessBase}" />
        <Setter Property="Helpers:Control.CornerRadius" Value="{DynamicResource ButtonBorderRadiusBase}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:Button}">
                    <Grid UseLayoutRounding="True">
                        <!-- Effect -->
                        <Border x:Name="Effect"
                                Opacity="0"
                                BorderThickness="6"
                                BorderBrush="{TemplateBinding EffectBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{Binding Path=(Helpers:Control.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <!-- Border -->
                        <Rectangle x:Name="PART_Border"
                                   Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent},
                                                        Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter=true}"
                                   RadiusX="{Binding Path=(Helpers:Control.CornerRadius), RelativeSource={RelativeSource TemplatedParent},
                                                Converter={StaticResource CornerRadiusToDoubleConverter}}"
                                   RadiusY="{Binding Path=(Helpers:Control.CornerRadius), RelativeSource={RelativeSource TemplatedParent},
                                                Converter={StaticResource CornerRadiusToDoubleConverter}}" />
                        <!-- Content -->
                        <Grid Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <!-- Icon -->
                                <ColumnDefinition Width="Auto" />
                                <!-- Content -->
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Controls:Icon x:Name="Icon" Grid.Column="0" Focusable="False" Type="{TemplateBinding Icon}" />
                            <Controls:ContentControl x:Name="Content"
                                                     Grid.Column="1"
                                                     RecognizesAccessKey="True"
                                                     Content="{TemplateBinding Content}"
                                                     ContentTemplate="{TemplateBinding ContentTemplate}"
                                                     ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                     ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                     ContentCharacterCasing="{Binding Path=(Helpers:Control.ContentCharacterCasing), 
                                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    <VisualTransition GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{StaticResource EaseInOut}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{StaticResource EaseInOut}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Grid.ColumnSpan" Value="2" />
                        </Trigger>
                        <Trigger Property="Type" Value="Dashed">
                            <Setter TargetName="PART_Border" Property="StrokeDashArray" Value="2.5" />
                        </Trigger>
                        <Trigger Property="Loading" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0:0:0.2"
                                                         To="0.65" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Setter TargetName="Icon" Property="Type" Value="loading" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Type, ElementName=Icon, Converter={StaticResource IsNullConverter}}" Value="False">
                            <Setter TargetName="Content" Property="Margin" Value="8 0 0 0" />
                        </DataTrigger>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Effect" 
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     EasingFunction="{StaticResource EaseOutCirc}"
                                                     Duration="0:0:0.4"
                                                     From="0.5"
                                                     To="0" />
                                    <ThicknessAnimation Storyboard.TargetName="Effect" 
                                                        Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                        EasingFunction="{StaticResource EaseOutCirc}"
                                                        Duration="0:0:0.4"
                                                        From="-1"
                                                        To="-5.6" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Primary -->
            <Trigger Property="Type" Value="Primary">
                <Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryForeground}" />
                <Setter Property="Background" Value="{DynamicResource ButtonPrimaryBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonPrimaryBrush}" />
                
            </Trigger>
            <!-- Danger -->
            <Trigger Property="Type" Value="Danger">
                <Setter Property="EffectBrush" Value="{DynamicResource ButtonDangerBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonDangerBrush}" />
                <Setter Property="Background" Value="{DynamicResource ButtonDangerBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDangerBorder}" />
            </Trigger>
            <!-- Size -->
            <Trigger Property="Size" Value="Large">
                <Setter Property="Height" Value="{DynamicResource ButtonHeightLarge}" />
                <Setter Property="Padding" Value="{DynamicResource ButtonPaddingLarge}" />
                <Setter Property="FontSize" Value="{DynamicResource ButtonFontSizeLarge}" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Height" Value="{DynamicResource ButtonHeightSmall}" />
                <Setter Property="Padding" Value="{DynamicResource ButtonPaddingSmall}" />
                <Setter Property="FontSize" Value="{DynamicResource ButtonFontSizeSmall}" />
            </Trigger>
            <!-- Shape Circle -->
            <Trigger Property="Circular" Value="True">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Helpers:Control.CornerRadius" Value="{Binding Height, ConverterParameter=2, RelativeSource={RelativeSource Self}, 
                                                                            Converter={StaticResource DoubleToCornerRadiusConverter}}" />
            </Trigger>
            <!-- Disabled -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ButtonDisableForeground}" />
                <Setter Property="Background" Value="{DynamicResource ButtonDisableBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisableBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>