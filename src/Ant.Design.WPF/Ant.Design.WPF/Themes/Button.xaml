<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Antd.Controls"
                    xmlns:Helpers="clr-namespace:Antd.Helpers">

    <!--<Grid>
        <AdornerDecorator>
            <Grid>
                <Grid.ColumnDefinitions>
                    --><!-- Icon --><!--
                    <ColumnDefinition Width="Auto" />
                    --><!-- Content --><!--
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="0"
                               Grid.ColumnSpan="2"
                               RadiusX="4"
                               RadiusY="4"
                               Fill="{TemplateBinding Background}" />

                <Controls:ContentControl x:Name="PART_ContentPresenter"
                                             Grid.Column="1"
                                             RecognizesAccessKey="True"
                                             Content="{TemplateBinding Content}"
                                             Padding="{TemplateBinding Padding}"
                                             
                                             ContentTemplate="{TemplateBinding ContentTemplate}"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                             ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                             ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" 
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </Grid>
        </AdornerDecorator>
        <Border x:Name="Border"
                    Background="Transparent"
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Helpers:ControlHelper.CornerRadius), Mode=OneWay}" />
    </Grid>-->
    



    <ControlTemplate x:Key="Ant.ButtonTemplate" TargetType="{x:Type Controls:Button}">
        <Border Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Helpers:ControlHelper.CornerRadius), Mode=OneWay}">

            <Border.BitmapEffect>
                <OuterGlowBitmapEffect x:Name="myOuterGlowBitmapEffect"  
                                       GlowColor="Blue" 
                                       GlowSize="0" />
            </Border.BitmapEffect>
            
            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Controls:ContentControl x:Name="PART_ContentPresenter"
                                             Grid.Column="1"
                                             RecognizesAccessKey="True"
                                             Content="{TemplateBinding Content}"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                             ContentTemplate="{TemplateBinding ContentTemplate}"
                                             ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                             ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderThickness" Value="{DynamicResource BorderThicknessBase}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisableBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonDisableForeground}" />
                <Setter Property="Background" Value="{DynamicResource ButtonDisableBackground}" />
            </Trigger>
            <EventTrigger RoutedEvent="ButtonBase.Click">
                <BeginStoryboard>
                    <Storyboard>

                        <!-- Animate the GlowSize from 0 to 40 over half a second. -->
                        <DoubleAnimation Storyboard.TargetName="myOuterGlowBitmapEffect"
                                         Storyboard.TargetProperty="GlowSize"
                                        From="0" To="40" Duration="0:0:0.5" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Controls:Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeBase}" />
        <Setter Property="Height" Value="{DynamicResource ButtonHeightBase}" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPaddingBase}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThicknessBase}" />
        <Setter Property="Helpers:ControlHelper.CornerRadius" Value="{DynamicResource ButtonBorderRadiusBase}" />
        <Setter Property="Template" Value="{StaticResource Ant.ButtonTemplate}" />

        <Style.Triggers>
            <!-- Default -->
            <Trigger Property="Type" Value="{x:Null}">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}" />
                <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="{x:Null}" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultFocusedBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultFocusedBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="{x:Null}" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultFocusedBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultFocusedBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="{x:Null}" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultPressedBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultPressedBrush}" />
            </MultiTrigger>
            
            <!-- Primary -->
            <Trigger Property="Type" Value="Primary">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryForeground}" />
                <Setter Property="Background" Value="{DynamicResource ButtonPrimaryBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="Primary" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ButtonPrimaryFocusedBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="Primary" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ButtonPrimaryFocusedBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="Primary" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ButtonPrimaryPressedBrush}" />
            </MultiTrigger>
            
            <!-- Danger -->
            <Trigger Property="Type" Value="Danger">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDangerBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonDangerForeground}" />
                <Setter Property="Background" Value="{DynamicResource ButtonDangerBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="Danger" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ButtonDangerFocusedBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDangerFocusedBrush}" />
                <Setter Property="Background" Value="White" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="Danger" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDangerFocusedBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryForeground}" />
                <Setter Property="Background" Value="{DynamicResource ButtonDangerFocusedBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Type" Value="Danger" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDangerPressedBrush}" />
                <Setter Property="Background" Value="{DynamicResource ButtonDangerPressedBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>